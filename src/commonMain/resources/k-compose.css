.kilua-box {
    display: grid;
    grid-template-columns: minmax(0px, 1fr);
    grid-template-rows: minmax(0px, 1fr);
}

.kilua-box>* {
    grid-area: 1 / 1;
}

.kilua-box.kilua-align-top-start {
    align-items: start;
    justify-items: start;
}

.kilua-box.kilua-align-top-center {
    align-items: start;
    justify-items: center;
}

.kilua-box.kilua-align-top-end {
    align-items: start;
    justify-items: end;
}

.kilua-box.kilua-align-center-start {
    align-items: center;
    justify-items: start;
}

.kilua-box.kilua-align-center {
    align-items: center;
    justify-items: center;
}

.kilua-box.kilua-align-center-end {
    align-items: center;
    justify-items: end;
}

.kilua-box.kilua-align-bottom-start {
    align-items: end;
    justify-items: start;
}

.kilua-box.kilua-align-bottom-center {
    align-items: end;
    justify-items: center;
}

.kilua-box.kilua-align-bottom-end {
    align-items: end;
    justify-items: end;
}

.kilua-box>.kilua-align-top-start-self {
    align-self: start;
    justify-self: start;
}

.kilua-box>.kilua-align-top-center-self {
    align-self: start;
    justify-self: center;
}

.kilua-box>.kilua-align-top-end-self {
    align-self: start;
    justify-self: end;
}

.kilua-box>.kilua-align-center-start-self {
    align-self: center;
    justify-self: start;
}

.kilua-box>.kilua-align-center-self {
    align-self: center;
    justify-self: center;
}

.kilua-box>.kilua-align-center-end-self {
    justify-self: end;
    align-self: center;
}

.kilua-box>.kilua-align-bottom-start-self {
    justify-self: start;
    align-self: end;
}

.kilua-box>.kilua-align-bottom-center-self {
    justify-self: center;
    align-self: end;
}

.kilua-box>.kilua-align-bottom-end-self {
    justify-self: end;
    align-self: end;
}

.kilua-row {
    display: flex;
    flex-direction: row;
}

.kilua-row.kilua-arrange-start {
    justify-content: flex-start;
}

.kilua-row.kilua-arrange-center {
    justify-content: center;
}

.kilua-row.kilua-arrange-end {
    justify-content: flex-end;
}

.kilua-row.kilua-arrange-space-evenly {
    justify-content: space-evenly;
}

.kilua-row.kilua-arrange-space-between {
    justify-content: space-between;
}

.kilua-row.kilua-arrange-space-around {
    justify-content: space-around;
}

.kilua-row.kilua-align-top {
    align-items: flex-start;
}

.kilua-row.kilua-align-center-vert {
    align-items: center;
}

.kilua-row.kilua-align-bottom {
    align-items: flex-end;
}

.kilua-row>.kilua-align-top-self {
    align-self: flex-start;
}

.kilua-row>.kilua-align-center-vert-self {
    align-self: center;
}

.kilua-row>.kilua-align-bottom-self {
    align-self: flex-end;
}

:root {
    --kilua-row-gap: 0px;
    --kilua-col-gap: 0px;
}

.kilua-row.kilua-arrange-spaced-by {
    column-gap: var(--kilua-row-gap);
}

.kilua-col.kilua-arrange-spaced-by {
    row-gap: var(--kilua-col-gap);
}

.kilua-col {
    display: flex;
    flex-direction: column;
}

.kilua-col.kilua-arrange-top {
    justify-content: flex-start;
}

.kilua-col.kilua-arrange-center {
    justify-content: center;
}

.kilua-col.kilua-arrange-bottom {
    justify-content: flex-end;
}

.kilua-col.kilua-arrange-space-evenly {
    justify-content: space-evenly;
}

.kilua-col.kilua-arrange-space-between {
    justify-content: space-between;
}

.kilua-col.kilua-arrange-space-around {
    justify-content: space-around;
}

.kilua-col.kilua-align-start {
    align-items: flex-start;
}

.kilua-col.kilua-align-center-horiz {
    align-items: center;
}

.kilua-col.kilua-align-end {
    align-items: flex-end;
}

.kilua-col>.kilua-align-start-self {
    align-self: flex-start;
}

.kilua-col>.kilua-align-center-horiz-self {
    align-self: center;
}

.kilua-col>.kilua-align-end-self {
    align-self: flex-end;
}

:is(.hover)::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 1;
  border-radius: inherit;
  inline-size: 100%;
  block-size: 100%;
  background-position: center;
  background-image: radial-gradient(circle, currentColor 1%, transparent 1%);
  opacity: 0;
  transition: none;
}
:is(.hover):is(:focus-visible, :hover)::after {
  background-size: 15000%;
  opacity: 0.1;
  transition: background-size var(--speed2) linear;
}

html.is-changing .transition-fade {
    view-transition-name: main;
}

::view-transition-old(main) {
    animation: fade 0.5s ease-in-out both;
}

::view-transition-new(main) {
    animation: fade 0.5s ease-in-out both reverse;
}

@keyframes fade {
    from { opacity: 1; }
    to { opacity: 0; }
}

html.is-changing:not(.swup-native) .transition-fade {
    transition: 0.25s opacity;
    opacity: 1;
}
html.is-animating:not(.swup-native) .transition-fade {
    opacity: 0;
}
